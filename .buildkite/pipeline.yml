env:
  ANKA_MOJAVE_TEMPLATE: "10.14.4_6C_14G_40G"
  ANKA_TEMPLATE_TAG: "clean::cicd::git-ssh::nas::brew"
  CHECKSUMABLE: "scripts/eosio_build*"
  MAC_TAG: "eosio_2-4"
  WORKDIR: "/private/var/tmp/ankafs.0"

steps:

  - trigger: "mac-anka-fleet"
    label: ":anka: Ensure Mojave Anka Template Tag Exists"
    branches: "*"
    async: false
    build:
      branch: "master"
      env:
        REPO: "${BUILDKITE_REPO}"
        REPO_BRANCH: "${BUILDKITE_BRANCH}"
        CHECKSUMABLE: "${CHECKSUMABLE}"
        TEMPLATE: "${ANKA_MOJAVE_TEMPLATE}"
        TEMPLATE_TAG: "${ANKA_TEMPLATE_TAG}"
        TAG_COMMANDS: "CLONED_REPO_DIR/scripts/eosio_build.sh -y -P -f -m" # CLONED_REPO_DIR IS REQUIRED and is where the repo is always cloned into
        PROJECT_TAG: "${MAC_TAG}"

  - wait

  - label: ":darwin: [Darwin] Mojave Build"
    command:
      - "./scripts/eosio_build.sh -y -P"
      - "tar -pczf /Network/NAS/MAC_FLEET/BUILDKITE/artifacts/${ANKA_MOJAVE_TEMPLATE}-${BUILDKITE_PIPELINE_SLUG}-${BUILDKITE_BUILD_ID}.tar.gz build"
    plugins:
      chef/anka#v0.4.3:
        vm-name: $ANKA_MOJAVE_TEMPLATE
        vm-registry-tag: "${ANKA_TEMPLATE_TAG}::${MAC_TAG}"
        always-pull: true
        workdir: $WORKDIR
        debug: true
        wait-network: true
    agents:
      - "queue=mac-anka-node-fleet"
    timeout: 120


  # - command: | # macOS Mojave Build
  #     echo "--- Creating symbolic link to job directory :file_folder:"
  #     sleep 5
  #     ln -s "$(pwd)" /data/job
  #     cd /data/job
  #     echo "+++ Building :hammer:"
  #     ./scripts/eosio_build.sh -y -P
  #     echo "--- Compressing build directory :compression:"
  #     tar -pczf build.tar.gz build
  #     if [[ ! -f build.tar.gz ]]; then echo 'ERROR: No build.tar.gz artifact found!' && exit 1; fi
  #   label: ":darwin: Mojave Build"
  #   agents:
  #     - "role=builder-v2-2"
  #     - "os=mojave"
  #   artifact_paths: "build.tar.gz"
  #   timeout: 120

  # - command: | # Amazon Linux 2 Build
  #       echo "+++ :hammer: Building"
  #       ./scripts/eosio_build.sh -y -P
  #       echo "--- :compression: Compressing build directory"
  #       tar -pczf build.tar.gz build
  #       if [[ ! -f build.tar.gz ]]; then echo 'ERROR: No build.tar.gz artifact found!' && exit 1; fi
  #   label: ":aws: Amazon Linux 2 Build"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   artifact_paths: "build.tar.gz"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:amazonlinux2_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   timeout: 120

  # - command: | # CentOS 7 Build
  #       echo "+++ :hammer: Building"
  #       ./scripts/eosio_build.sh -y -P
  #       echo "--- :compression: Compressing build directory"
  #       tar -pczf build.tar.gz build
  #       if [[ ! -f build.tar.gz ]]; then echo 'ERROR: No build.tar.gz artifact found!' && exit 1; fi
  #   label: ":centos: CentOS 7 Build"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   artifact_paths: "build.tar.gz"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:centos7_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   timeout: 120

  # - command: | # Ubuntu 16.04 Build
  #       echo "+++ :hammer: Building"
  #       ./scripts/eosio_build.sh -y -P
  #       echo "--- :compression: Compressing build directory"
  #       tar -pczf build.tar.gz build
  #       if [[ ! -f build.tar.gz ]]; then echo 'ERROR: No build.tar.gz artifact found!' && exit 1; fi
  #   label: ":ubuntu: Ubuntu 16.04 Build"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   artifact_paths: "build.tar.gz"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:ubuntu16_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   timeout: 120

  # - command: | # Ubuntu 18.04 Build
  #       echo "+++ :hammer: Building"
  #       ./scripts/eosio_build.sh -y -P
  #       echo "--- :compression: Compressing build directory"
  #       tar -pczf build.tar.gz build
  #       if [[ ! -f build.tar.gz ]]; then echo 'ERROR: No build.tar.gz artifact found!' && exit 1; fi
  #   label: ":ubuntu: Ubuntu 18.04 Build"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   artifact_paths: "build.tar.gz"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:ubuntu18_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   timeout: 120

  - wait

  # # Amazon Linux 2 Tests
  # - command: |
  #       echo "--- :arrow_down: Downloading Build Directory"
  #       buildkite-agent artifact download "build.tar.gz" . --step ":aws: Amazon Linux 2 Build"
  #       echo "+++ :microscope: Running Tests"
  #       ./scripts/parallel-test.sh
  #   label: ":aws: Amazon Linux 2 Tests"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:amazonlinux2_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   timeout: 60

  # - command: |
  #       echo "--- :arrow_down: Downloading Build Directory"
  #       buildkite-agent artifact download "build.tar.gz" . --step ":aws: Amazon Linux 2 Build"
  #       echo "+++ :microscope: Running Tests"
  #       ./scripts/serial-test.sh
  #   label: ":aws: Amazon Linux 2 NP Tests"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:amazonlinux2_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   timeout: 60

  # # centOS 7 Tests
  # - command: |
  #       echo "--- :arrow_down: Downloading Build Directory"
  #       buildkite-agent artifact download "build.tar.gz" . --step ":centos: CentOS 7 Build"
  #       echo "+++ :microscope: Running Tests"
  #       ./scripts/parallel-test.sh
  #   label: ":centos: CentOS 7 Tests"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:centos7_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   timeout: 60

  # - command: |
  #       echo "--- :arrow_down: Downloading Build Directory"
  #       buildkite-agent artifact download "build.tar.gz" . --step ":centos: CentOS 7 Build"
  #       echo "+++ :microscope: Running Tests"
  #       ./scripts/serial-test.sh
  #   label: ":centos: CentOS 7 NP Tests"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:centos7_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   timeout: 60

  # # Ubuntu 16.04 Tests
  # - command: |
  #       echo "--- :arrow_down: Downloading Build Directory"
  #       buildkite-agent artifact download "build.tar.gz" . --step ":ubuntu: Ubuntu 16.04 Build"
  #       echo "+++ :microscope: Running Tests"
  #       ./scripts/parallel-test.sh
  #   label: ":ubuntu: Ubuntu 16.04 Tests"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:ubuntu16_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   timeout: 60

  # - command: |
  #       echo "--- :arrow_down: Downloading Build Directory"
  #       buildkite-agent artifact download "build.tar.gz" . --step ":ubuntu: Ubuntu 16.04 Build"
  #       echo "+++ :microscope: Running Tests"
  #       ./scripts/serial-test.sh
  #   label: ":ubuntu: Ubuntu 16.04 NP Tests"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:ubuntu16_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   timeout: 60

  # # Ubuntu 18.04 Tests
  # - command: |
  #       echo "--- :arrow_down: Downloading Build Directory"
  #       buildkite-agent artifact download "build.tar.gz" . --step ":ubuntu: Ubuntu 18.04 Build"
  #       echo "+++ :microscope: Running Tests"
  #       ./scripts/parallel-test.sh
  #   label: ":ubuntu: Ubuntu 18.04 Tests"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:ubuntu18_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   timeout: 60

  # - command: |
  #       echo "--- :arrow_down: Downloading Build Directory"
  #       buildkite-agent artifact download "build.tar.gz" . --step ":ubuntu: Ubuntu 18.04 Build"
  #       echo "+++ :microscope: Running Tests"
  #       ./scripts/serial-test.sh
  #   label: ":ubuntu: Ubuntu 18.04 NP Tests"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:ubuntu18_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   timeout: 60

  - label: ":darwin: [Darwin] Mojave Tests"
    command:
      # ssh needed to work around tty limitations of anka run (they're releasing a fix in the next major version)
      - "ssh -i ~/.ssh/localhost anka@localhost \"cd $WORKDIR && PATH=$PATH ./scripts/parallel-test.sh /Network/NAS/MAC_FLEET/BUILDKITE/artifacts/${ANKA_MOJAVE_TEMPLATE}-${BUILDKITE_PIPELINE_SLUG}-${BUILDKITE_BUILD_ID}.tar.gz\""
    artifact_paths:
      - "build/genesis.json"
      - "build/config.ini"
      - "build/test-results.xml"
    agents:
      - "queue=mac-anka-node-fleet"
    plugins:
      chef/anka#v0.4.3:
        vm-name: $ANKA_MOJAVE_TEMPLATE
        vm-registry-tag: "${ANKA_TEMPLATE_TAG}::${MAC_TAG}"
        always-pull: true
        debug: true
        wait-network: true
    timeout: 120

  - label: ":darwin: [Darwin] Mojave Tests"
    command:
      - "ssh -i ~/.ssh/localhost anka@localhost \"cd $WORKDIR && PATH=$PATH ./scripts/serial-test.sh /Network/NAS/MAC_FLEET/BUILDKITE/artifacts/${ANKA_MOJAVE_TEMPLATE}-${BUILDKITE_PIPELINE_SLUG}-${BUILDKITE_BUILD_ID}.tar.gz\""
    artifact_paths:
      - "build/mongod.log"
      - "build/genesis.json"
      - "build/config.ini"
      - "build/test-results.xml"
    agents:
      - "queue=mac-anka-node-fleet"
    plugins:
      chef/anka#v0.4.3:
        vm-name: $ANKA_MOJAVE_TEMPLATE
        vm-registry-tag: "${ANKA_TEMPLATE_TAG}::${MAC_TAG}"
        always-pull: true
        debug: true
        wait-network: true
    timeout: 120

  # - wait

  # - command: | # CentOS 7 Package Builder
  #       echo "--- :arrow_down: Downloading build directory"
  #       buildkite-agent artifact download "build.tar.gz" . --step ":centos: CentOS 7 Build"
  #       tar -zxf build.tar.gz
  #       echo "+++ :microscope: Starting package build"
  #       yum install -y rpm-build
  #       mkdir -p /root/rpmbuild/BUILD
  #       mkdir -p /root/rpmbuild/BUILDROOT
  #       mkdir -p /root/rpmbuild/RPMS
  #       mkdir -p /root/rpmbuild/SOURCES
  #       mkdir -p /root/rpmbuild/SPECS
  #       mkdir -p /root/rpmbuild/SRPMS
  #       cd /data/job/build/packages
  #       bash generate_package.sh rpm
  #   label: ":centos: CentOS 7 Package Builder"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   artifact_paths:
  #     - "build/packages/*.rpm"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:centos7_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   env:
  #     OS: "el7"
  #     PKGTYPE: "rpm"
  #   timeout: 60

  # - command: | # Ubuntu 16.04 Package Builder
  #       echo "--- :arrow_down: Downloading build directory"
  #       buildkite-agent artifact download "build.tar.gz" . --step ":ubuntu: Ubuntu 16.04 Build"
  #       tar -zxf build.tar.gz
  #       echo "+++ :microscope: Starting package build"
  #       cd /data/job/build/packages
  #       bash generate_package.sh deb
  #   label: ":ubuntu: Ubuntu 16.04 Package Builder"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   artifact_paths:
  #     - "build/packages/*.deb"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:ubuntu16_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   env:
  #     OS: "ubuntu-16.04"
  #     PKGTYPE: "deb"
  #   timeout: 60

  # - command: | # Ubuntu 18.04 Package Builder
  #       echo "--- :arrow_down: Downloading build directory"
  #       buildkite-agent artifact download "build.tar.gz" . --step ":ubuntu: Ubuntu 18.04 Build"
  #       tar -zxf build.tar.gz
  #       echo "+++ :microscope: Starting package build"
  #       cd /data/job/build/packages
  #       bash generate_package.sh deb
  #   label: ":ubuntu: Ubuntu 18.04 Package Builder"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   artifact_paths:
  #     - "build/packages/*.deb"
  #   plugins:
  #     ecr#v1.1.4:
  #       login: true
  #       account_ids: "436617320021"
  #       no-include-email: true
  #       region: "us-west-2"
  #     docker#v2.1.0:
  #       debug: true
  #       image: "436617320021.dkr.ecr.us-west-2.amazonaws.com/ci:ubuntu18_2-3"
  #       propagate-environment: true
  #       workdir: /data/job
  #   env:
  #     OS: "ubuntu-18.04"
  #     PKGTYPE: "deb"
  #   timeout: 60

  # - command: | # macOS Mojave Package Builder
  #       echo "--- :arrow_down: Downloading build directory"
  #       buildkite-agent artifact download "build.tar.gz" . --step ":darwin: Mojave Build"
  #       tar -zxf build.tar.gz
  #       echo "+++ :microscope: Starting package build"
  #       ln -s "$(pwd)" /data/job
  #       cd /data/job/build/packages
  #       bash generate_package.sh brew
  #   label: ":darwin: Mojave Package Builder"
  #   agents:
  #     - "role=builder-v2-2"
  #     - "os=mojave"
  #   artifact_paths:
  #     - "build/packages/*.tar.gz"
  #     - "build/packages/*.rb"
  #   timeout: 60

  # - wait

  # - command: | # Brew Updater
  #       echo "--- :arrow_down: Downloading brew files"
  #       buildkite-agent artifact download "build/packages/eosio.rb" . --step ":darwin: Mojave Package Builder"
  #   label: ":darwin: Brew Updater"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   artifact_paths:
  #     - "build/packages/eosio.rb"
  #   timeout: 5

  # - command: | # Git Submodule Regression Check
  #       echo "+++ :microscope: Running git submodule regression check" && \
  #       ./scripts/submodule_check.sh
  #   label: "Git Submodule Regression Check"
  #   agents:
  #     queue: "automation-large-builder-fleet"
  #   timeout: 5
